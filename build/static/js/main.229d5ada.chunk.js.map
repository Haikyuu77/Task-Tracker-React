{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.229d5ada.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text, onClick}) => {\r\n    return (\r\n    <button \r\n        onClick = {onClick}  \r\n        style = {{backgroundColor : color}}\r\n        className = 'btn'\r\n    >\r\n    {text}\r\n    </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'green',\r\n    text : \"Submit\",\r\n}\r\n\r\nButton.propTypes = {\r\n    text : PropTypes.string,\r\n    color : PropTypes.string,\r\n    onClick : PropTypes.func\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n    return (\r\n        <header className = 'header'>\r\n          <h1>{title}</h1>  \r\n          <Button \r\n          color = {showAdd ? 'red':'green'}\r\n          text = {showAdd ? 'Close' : 'Add'} \r\n          onClick = {onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n   title : 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className = {`task  ${task.reminder ? 'reminder': ''}`} onDoubleClick ={ ()=> onToggle(task.id) }>\r\n            <h3>{task.text} <FaTimes style = {{color:'red' , cursor : 'pointer'}} onClick ={ () => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n           {tasks.map((task) => (\r\n           <Task key = {task.id} task = {task} onDelete = {onDelete} onToggle = {onToggle}/>\r\n           ))} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n    }\r\n    return (\r\n        <form className = \"add-form\" onSubmit ={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Add Task\" \r\n                value = {text} \r\n                onChange ={(e) =>setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Add Day & Time\" \r\n                value = {day} \r\n                onChange ={(e) =>setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control  form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input \r\n                type=\"checkbox\" \r\n                checked = {reminder}\r\n                value = {reminder} \r\n                onChange ={(e) =>setReminder(e.currentTarget.checked)} \r\n                />\r\n            </div>\r\n                <input type=\"submit\" value=\"Save Task\" className =\"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState} from 'react'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n      {\n          id : 1,\n          text : \"Doctors Appointment\",\n          day : \"Feb 5th at 2.30pm\",\n          reminder : true\n      },\n      {\n          id : 2,\n          text : \"Meeting at School\",\n          day : \"Feb 6th at 1.30pm\",\n          reminder : true\n      },\n      {\n          id : 3,\n          text : \"Food Shopping\",\n          day : \"Feb 5th at 2.30pm\",\n          reminder : false\n      }\n  ])\n\n  //Add task \n  const addTask = (task) =>{\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n  //Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle reminder\n  const toggleReminder = (id) =>{\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder}:task))\n  }\n\n  return (\n    <div className = \"container\">\n      <Header onAdd = {() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask} />}\n      {tasks.length > 0 ? (<Tasks tasks = {tasks} onDelete = {deleteTask} onToggle = {toggleReminder} /> ) : (\"No Tasks to Show\") }\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}